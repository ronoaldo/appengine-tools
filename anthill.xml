<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright 2012 Ronoaldo JLP

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project name="anthill" xmlns:ivy="antlib:org.apache.ivy.ant">
    <description>
		Anthill is a set of common targets and macros for reusable Ant build
		scripts.
    </description>

    <property name="anthill.version" value="1.0.0-beta" />

    <!-- Default files that can be used to load configure the build -->

    <property file="${user.home}/.anthill.properties"
              description="User level configuration file." />

    <property file="${basedir}/build.properties"
              description="Project level configuratio file." />

    <!-- Default values for properties -->

    <property name="anthill.source.dir" value="src" />
    <property name="anthill.bin.dir" value="bin" />
    <property name="anthill.test.source.dir" value="test" />
    <property name="anthill.test.bin.dir" value="test-bin" />
    <property name="anthill.test.coverage.dir" value="test-coverage" />
    <property name="anthill.javadoc.dir" value="javadoc" />
    <property name="anthill.artifact.dir" value="artifacts" />
    <property name="anthill.ivy.settings.file"
              value="${basedir}/ivysettings.xml" />

    <!-- Built-in classpath handling -->

    <path id="anthill.paths.src">
        <pathelement path="src" />
        <pathelement path="bin" />
    </path>

    <path id="anthill.paths.test">
        <pathelement path="test" />
        <pathelement path="test-bin" />
    </path>

    <path id="anthill.paths.ivylibs">
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <path id="anthill.paths.cobertura" />

    <!-- Dependency Management -->

    <target name="ivy/load-settings">
        <ivy:settings file="${basedir}/ivysettings.xml" />
    </target>

    <target name="ivy/libs-check">
        <uptodate property="libs.uptodate">
            <srcfiles dir="." includes="ivy.xml" />
            <mapper type="merge" to="lib/.stamp" />
        </uptodate>
    </target>

    <target name="ivy/clean" description=" - Remove Ivy retrieved files">
        <delete dir="lib" failonerror="false" />
    </target>

    <target name="ivy"
            depends="ivy/load-settings,ivy/libs-check"
            description="Retrieves Ivy artifacts and dependencies"
            unless="libs.uptodate">
        <ivy:resolve />
        <ivy:retrieve pattern="lib/[conf]/[artifact]-[revision].jar"
                      type="jar,bundle" />
        <touch file="lib/.stamp" />
    </target>

    <!-- Standard Build Support -->
    <target name="build/src"
            depends="ivy"
            description=" - Compiles the src directory">
        <mkdir dir="bin" />
        <javac srcdir="src"
               destdir="${anthill.bin.dir}"
               includeantruntime="false">
            <classpath refid="anthill.paths.src" />
            <classpath refid="anthill.paths.ivylibs" />
        </javac>
    </target>

    <target name="build/test"
            depends="ivy,build/src"
            description=" - Compiles the test directory">
        <mkdir dir="${anthill.test.bin.dir}" />
        <javac srcdir="test"
               destdir="${anthill.test.bin.dir}"
               includeantruntime="false">
            <classpath refid="anthill.paths.src" />
            <classpath refid="anthill.paths.test" />
            <classpath refid="anthill.paths.ivylibs" />
        </javac>
    </target>

    <target name="build/clean" description=" - Cleanup build files">
        <delete dir="${anthill.bin.dir}" />
        <delete dir="${anthill.test.bin.dir}" />
    </target>

    <!-- Documentation -->

    <target name="javadoc/generate"
            description=" - Generates the project documentation jar">
        <delete dir="${anthill.javadoc.dir}" failonerror="false" />
        <mkdir dir="${anthill.javadoc.dir}" />
        <javadoc access="public"
                 charset="utf-8"
                 windowtitle="Documentation of project ${ant.project.name}"
                 sourcepath="${anthill.source.dir}"
                 destdir="${anthill.javadoc.dir}">
            <classpath refid="anthill.paths.src" />
            <classpath refid="anthill.paths.ivylibs" />
        </javadoc>
    </target>

    <target name="javadoc/clean"
            description=" - Clean up the generated documentation">
        <delete dir="${anthill.javadoc.dir}" failonerror="false" />
        <delete file="${anthill.artifact.dir}}/${ant.project.name}-javadoc.jar" />
    </target>

    <!-- Artifacts support -->

    <target name="artifacts/clean">
        <delete dir="${anthill.artifact.dir}" />
    </target>

    <target name="artifacts/setup-dirs">
        <mkdir dir="${anthill.artifact.dir}" />
    </target>

    <target name="artifacts/bin"
            depends="artifacts/setup-dirs"
            description="Bundles the binary content on ${anthill.bin.dir} into a jar file.">
        <jar destfile="${anthill.artifact.dir}/${ant.project.name}-jar.jar">
            <fileset dir="${anthill.bin.dir}">
                <include name="**" />
            </fileset>
        </jar>
    </target>

    <target name="artifacts/sources"
            depends="artifacts/setup-dirs"
            description="Bundles the source on ${anthill.source.dir} into a jar file.">
        <zip destfile="${anthill.artifact.dir}/${ant.project.name}-source.jar">
            <fileset dir="${anthill.source.dir}">
                <include name="**" />
            </fileset>
        </zip>
    </target>

    <target name="artifacts/javadoc"
            depends="javadoc/generate"
            description="Bundles the generated javadoc into a jar file">
        <zip basedir="${anthill.javadoc.dir}"
             destfile="${anthill.artifact.dir}/${ant.project.name}-javadoc.jar" />
    </target>

    <!-- Test and code-coverage integration -->

    <target name="cobertura/setup" unless="anthill.test.coverage.setup">
        <ivy:cachepath organisation="net.sourceforge.cobertura"
                       module="cobertura"
                       revision="1.9.4.1"
                       conf="*"
                       inline="true"
                       pathid="anthill.paths.cobertura">
        </ivy:cachepath>
        <taskdef resource="tasks.properties"
                 classpathref="anthill.paths.cobertura" />
        <property name="anthill.test.coverage.setup" value="true" />
    </target>

    <target name="cobertura/clean">
        <delete dir="${anthill.test.coverage.dir}" failonerror="false" />
    </target>

    <target name="cobertura/instrument" depends="cobertura/setup">
        <mkdir dir="${anthill.test.coverage.dir}" />
        <cobertura-instrument datafile="${anthill.test.coverage.dir}/cobertura.ser"
                              todir="${anthill.test.coverage.dir}">
            <ignore regex="org.apache.log4j.*" />
            <fileset dir="${anthill.bin.dir}">
                <include name="**/*.class" />
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="cobertura/report">
        <cobertura-report datafile="${anthill.test.coverage.dir}/cobertura.ser"
                          format="xml"
                          destdir="${anthill.test.coverage.dir}/" />
    </target>

    <target name="junit/run">
        <junit fork="yes" dir="${basedir}" failureProperty="test.failed">
            <sysproperty key="net.sourceforge.cobertura.datafile"
                         file="${anthill.test.coverage.dir}/cobertura.ser" />
            <classpath>
                <path location="${anthill.test.coverage.dir}" />
                <path refid="anthill.paths.src" />
                <path refid="anthill.paths.test" />
                <path refid="anthill.paths.ivylibs" />
            </classpath>
            <formatter type="plain" usefile="no" />
            <formatter type="xml" usefile="yes" />
            <batchtest fork="yes" todir="${anthill.test.bin.dir}">
                <fileset dir="${anthill.test.bin.dir}"
                         includes="**/*Test.class" />
            </batchtest>
        </junit>

    </target>

    <!-- Mercurial SCM utilities -->

    <macrodef name="hg-id"
              description="Captures `hg id' output into hg.changeset and hg.revision properties.">
        <sequential>
            <exec executable="hg" outputproperty="hg.changeset">
                <arg value="id" />
                <arg value="-i" />
            </exec>
            <exec executable="hg" outputproperty="hg.revision">
                <arg value="id" />
                <arg value="-n" />
            </exec>
        </sequential>
    </macrodef>

    <!-- Boilerplate default targets -->

    <target name="build"
            depends="build/src,build/test"
            description="Compiles source and test code" />
    <target name="javadoc"
            depends="javadoc/generate,artifacts/javadoc"
            description="Build project documentation" />
    <target name="test"
            depends="build/test,cobertura/instrument,junit/run,cobertura/report"
            description="Run unit tests" />
    <target name="clean"
            depends="build/clean,cobertura/clean,artifacts/clean,javadoc/clean"
            description="Clean files generated by the build target" />
    <target name="clean/all"
            depends="clean,ivy/clean"
            description="Clean files generated by the build and ivy targets" />
    <target name="jar"
            depends="build/src,artifacts/bin"
            description="Package the project jar artifact" />
    <target name="source"
            depends="artifacts/sources"
            description="Package the project source artifact" />
</project>